# Notas de Estudo ‚Äì AWS CloudFormation (Infraestrutura Automatizada)

## üìå Conceitos Relevantes

* **Stack:** Conjunto de recursos AWS gerenciados como uma unidade.
* **Template:** Arquivo YAML que descreve toda a infraestrutura de forma declarativa.
* **Resources:** Elementos provisionados automaticamente (EC2, Security Groups, Load Balancer).
* **Parameters:** Valores din√¢micos para customizar o ambiente sem alterar o template.
* **User Data:** Scripts que configuram inst√¢ncias EC2 na inicializa√ß√£o (instala√ß√£o de Apache, cria√ß√£o de p√°gina HTML).
* **Outputs:** Informa√ß√µes √∫teis sobre recursos criados, como IPs e DNS do Load Balancer.
* **Elastic Load Balancer (ALB):** Distribui tr√°fego entre m√∫ltiplas inst√¢ncias EC2, garantindo alta disponibilidade.

---

## üõ†Ô∏è Servi√ßos e Ferramentas Utilizadas

* **AWS CloudFormation:** automatiza cria√ß√£o, atualiza√ß√£o e exclus√£o de recursos.
* **Amazon EC2:** m√°quinas virtuais para hospedar aplica√ß√µes web.
* **Security Group:** define regras de acesso (SSH e HTTP).
* **Elastic Load Balancer (ALB):** balanceia tr√°fego entre inst√¢ncias.
* **AWS CLI:** valida√ß√£o, cria√ß√£o e monitoramento da Stack via terminal.

---

## üí° Insights e Boas Pr√°ticas

1. **Automatiza√ß√£o completa:**

   * Reduz erros humanos e agiliza replica√ß√£o de ambientes.

2. **Par√¢metros tornam o template flex√≠vel:**

   * Tipo de inst√¢ncia, chave SSH e outras configura√ß√µes podem ser ajustadas sem editar o YAML.

3. **User Data √© poderoso:**

   * Instala e configura softwares automaticamente (Apache, p√°ginas web, scripts).

4. **Outputs ajudam na integra√ß√£o:**

   * Permitem acessar rapidamente IPs, IDs de recursos e DNS de Load Balancer.

5. **Seguran√ßa:**

   * Limitar IPs em Security Groups √© essencial em ambientes reais.
   * Nunca deixar chaves SSH p√∫blicas.

6. **Monitoramento e testes:**

   * Validar template antes do deploy evita problemas.
   * Testar em ambiente separado do produ√ß√£o garante seguran√ßa.

7. **Tags organizam recursos:**

   * Facilita rastreabilidade, cobran√ßa e gerenciamento de infraestrutura.

---

## ‚ö° Pr√≥ximos Passos para Estudo

* Explorar **Stacks mais complexas** com m√∫ltiplas camadas (web, aplica√ß√£o, banco de dados).
* Testar **nested stacks** (Stacks dentro de Stacks) para modularidade.
* Integrar com **CloudWatch e SNS** para alertas e monitoramento.
* Experimentar **atualiza√ß√£o de Stack** e entender comportamento de rollback.
